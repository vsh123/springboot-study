<?xml version="1.0" encoding="UTF-8"?>

<configuration debug="false">

    <property name="logHome" value="log/" />

    <!--spring boot의 기본 logback base.xml은 그대로 가져간다.-->
    <include resource="org/springframework/boot/logging/logback/base.xml" />

    <!--  appender이름이 roadmapConsole인 consoleAppender를 선언  -->
    <appender name="roadmapConsole" class="ch.qos.logback.core.ConsoleAppender">
        <!--   해당 로깅의 패턴을 설정   -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--  appender이름이 roadmapFile인 consoleAppender를 선언  -->
    <appender name="roadmapFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--로깅이 기록될 위치-->
        <file>${logHome}roadmap.log</file>
        <!--로깅 파일이 특정 조건을 넘어가면 다른 파일로 만들어 준다.-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logHome}roadmap.%d{yyyyMMdd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>15MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <charset>utf8</charset>
            <Pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} %thread %-5level %logger - %m%n
            </Pattern>
        </encoder>
    </appender>

    <!--    logger name이 roadmapConsole일때 적용할 appender를 등록한다.-->
    <logger name="roadmapConsole" level="INFO" >
        <appender-ref ref="roadmapConsole" />
    </logger>

    <!--    logger name이 roadmapFile일때 적용할 appender를 등록한다.-->
    <logger name="roadmapFile" level="INFO" >
        <appender-ref ref="roadmapFile" />
    </logger>

</configuration>